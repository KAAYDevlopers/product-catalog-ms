openapi: 3.0.1
info:
  title: Product-Catalog-MS
  description: "Handle product and product inventory CRUD operations example for fetching\
    \ product details,listing different types of products and keep track of product\
    \ inventory"
  version: "3.0"
servers:
  - url: http://localhost:8090
    description: Generated server url
paths:
  /catalog/product/updateProduct:
    put:
      tags:
        - product-controller
      operationId: updateProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDTO'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: string
                  - type: object
                    additionalProperties:
                      type: string
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /catalog/product/insertVariantByProductId/{productId}:
    post:
      tags:
        - product-controller
      operationId: upsertVariantByProductId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductVariantDTO'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: string
                  - type: object
                    additionalProperties:
                      type: string
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /catalog/product/insertProduct:
    post:
      tags:
        - product-controller
      operationId: insertProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDTO'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: string
                  - type: object
                    additionalProperties:
                      type: string
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /catalog/inventory/updateVariantInventory:
    post:
      tags:
        - product-inventory-controller
      operationId: updateVariantInventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInventoryDTO'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: string
                  - type: object
                    additionalProperties:
                      type: string
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /catalog/product/getVariantData/{variantId}:
    get:
      tags:
        - product-controller
      operationId: getVariantData
      parameters:
        - name: variantId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: string
                  - type: object
                    additionalProperties:
                      type: string
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /catalog/product/getProductByName/{productName}:
    get:
      tags:
        - product-controller
      operationId: getProductByName
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: string
                  - type: object
                    additionalProperties:
                      type: string
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /catalog/product/getProductById/{productId}:
    get:
      tags:
        - product-controller
      operationId: getProductById
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: string
                  - type: object
                    additionalProperties:
                      type: string
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /catalog/product/filterProduct:
    get:
      tags:
        - product-controller
      operationId: productFilters
      parameters:
        - name: productFilters
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/ProductFiltersDTO'
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: string
                  - type: object
                    additionalProperties:
                      type: string
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /catalog/product/categories/{categoryID}:
    get:
      tags:
        - product-controller
      operationId: getProductByCategoryID
      parameters:
        - name: categoryID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: string
                  - type: object
                    additionalProperties:
                      type: string
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /catalog/inventory/validateAvailability:
    get:
      tags:
        - product-inventory-controller
      operationId: validateAvailability
      parameters:
        - name: variantIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: string
                  - type: object
                    additionalProperties:
                      type: string
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /catalog/inventory/getVariantInventory/{variantId}:
    get:
      tags:
        - product-inventory-controller
      operationId: getVariantInventoryData
      parameters:
        - name: variantId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: string
                  - type: object
                    additionalProperties:
                      type: string
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
components:
  schemas:
    ProductCategoryDTO:
      type: object
      properties:
        productCategoryId:
          type: integer
          format: int64
        categoryName:
          type: string
        categoryDescription:
          type: string
    ProductDTO:
      required:
        - brandName
        - productCategory
        - productName
      type: object
      properties:
        productId:
          type: integer
          format: int64
        productName:
          type: string
        productDescription:
          type: string
        categoryId:
          type: integer
          format: int64
        brandName:
          type: string
        productCategory:
          $ref: '#/components/schemas/ProductCategoryDTO'
        productVariants:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariantDTO'
        productCreatedAt:
          type: string
        productModifiedAt:
          type: string
    ProductInventoryDTO:
      type: object
      properties:
        productInventoryId:
          type: integer
          format: int64
        variantId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int64
        sku:
          type: string
        inStockStatus:
          type: boolean
        createdAt:
          type: string
        modifiedAt:
          type: string
    ProductVariantDTO:
      type: object
      properties:
        variantId:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        variantName:
          type: string
        variantValue:
          type: string
        imagePath:
          type: string
        buyPrice:
          type: number
          format: double
        onSalePrice:
          type: number
          format: double
        about:
          type: string
        benefits:
          type: string
        nutritionFacts:
          type: string
        usageDose:
          type: string
        manufacturerDetails:
          type: string
        variantType:
          type: string
        numberOfServings:
          type: integer
          format: int32
        inventoryData:
          $ref: '#/components/schemas/ProductInventoryDTO'
        expiryDate:
          type: string
        mfdDate:
          type: string
        variantCreatedAt:
          type: string
        variantModifiedAt:
          type: string
    ProductFiltersDTO:
      type: object
      properties:
        categoryId:
          type: integer
          format: int64
        brandName:
          type: string
        variantName:
          type: string
        variantValue:
          type: string
        numberOfServings:
          type: integer
          format: int32
        variantType:
          type: string
        minOnSalePrice:
          type: number
          format: double
        maxOnSalePrice:
          type: number
          format: double
